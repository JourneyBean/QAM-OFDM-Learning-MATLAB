function y = filter_lowpass_1_70(x)
%FILTER_LOWPASS_1_70 对输入 x 进行滤波并返回输出 y。

% MATLAB Code
% Generated by MATLAB(R) 9.9 and DSP System Toolbox 9.11.
% Generated on: 30-Jan-2022 16:29:12

%#codegen

% 要通过此函数生成 C/C++ 代码，请使用 codegen 命令。有关详细信息，请键入 'help codegen'。

persistent Hd;

if isempty(Hd)
    
    % 设计滤波器系数时使用了以下代码:
    % % Equiripple Lowpass filter designed using the FIRPM function.
    %
    % % All frequency values are in Hz.
    % Fs = 1000;  % Sampling Frequency
    %
    % Fpass = 1;               % Passband Frequency
    % Fstop = 70;              % Stopband Frequency
    % Dpass = 0.057501127785;  % Passband Ripple
    % Dstop = 0.031622776602;  % Stopband Attenuation
    % dens  = 20;              % Density Factor
    %
    % % Calculate the order from the parameters using FIRPMORD.
    % [N, Fo, Ao, W] = firpmord([Fpass, Fstop]/(Fs/2), [1 0], [Dpass, Dstop]);
    %
    % % Calculate the coefficients using the FIRPM function.
    % b  = firpm(N, Fo, Ao, W, {dens});
    
    Hd = dsp.FIRFilter( ...
        'Numerator', [0.0384719312206291 0.0293353513242276 ...
        0.0383839280373849 0.0475231922412497 0.0561363825971028 ...
        0.0635809165857373 0.0693279124367773 0.0729796877998519 ...
        0.0742322962913006 0.0729796877998519 0.0693279124367773 ...
        0.0635809165857373 0.0561363825971028 0.0475231922412497 ...
        0.0383839280373849 0.0293353513242276 0.0384719312206291]);
end

y = step(Hd,double(x));


% [EOF]
